<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.dematic.labs.toolkit.buildProcess</groupId>
        <artifactId>parentPom</artifactId>
        <version>2.0.2</version>
    </parent>

    <groupId>com.dematic.labs</groupId>
    <artifactId>dsp</artifactId>
    <version>0.1.3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Data Streaming Pipeline Sandbox</name>

    <modules>
        <module>data</module>
        <module>simulators</module>
        <module>drivers</module>
    </modules>

    <scm>
        <developerConnection>scm:git:git@gitlab.ops.cld:Dematiclabs/dsp.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.major.minor.version>2.11.11</scala.major.minor.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- common dependencies -->
            <dependency>
                <groupId>com.dematic.labs.toolkit.bom</groupId>
                <artifactId>common-dep</artifactId>
                <version>2.0.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- big data common dependencies -->
            <dependency>
                <groupId>com.dematic.labs.toolkit_bigdata.bom</groupId>
                <artifactId>bigdata-dep</artifactId>
                <version>1.0.13-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- scala dependencies -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.major.minor.version}</version>
        </dependency>
        <!-- supports compatibility between java 8 and scala, most issues fixed in scala 2.12.x -->
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-java8-compat_2.11</artifactId>
            <version>0.8.0</version>
        </dependency>
        <!-- kafka support -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
        </dependency>
        <!-- configuration -->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
        </dependency>
        <!-- utilities -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.11</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>io.monix</groupId>
            <artifactId>monix_2.11</artifactId>
            <version>2.3.0</version>
            <type>pom</type>
        </dependency>
        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <!-- declare tests dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
        </dependency>
        <!-- kafka unit testing -->
        <dependency>
            <groupId>info.batey.kafka</groupId>
            <artifactId>kafka-unit</artifactId>
        </dependency>
        <!-- cassandra unit testing -->
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
        </dependency>
        <!-- test helpers -->
        <dependency>
            <groupId>com.jayway.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-scala</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean install</defaultGoal>
        <plugins>
            <!-- This plugin compiles Scala files -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- test scala -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <parallel>false</parallel>
                    <systemProperties>
                        <spark.driver.allowMultipleContexts>true</spark.driver.allowMultipleContexts>
                        <spark.streaming.stopGracefullyOnShutdown>true</spark.streaming.stopGracefullyOnShutdown>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
